What happens when you initialize a repository? Why do you need to do it?

Se crea un directorio .git. Este directorio es necesario
para que git tenga control del repositorio.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

El staging area es usada por git para hacer un tracking de 
los archivos a commitear. Me permite diferenciar que archivos
quiero controlar y cuales no del working directory.

How can you use the staging area to make sure you have one commit per logical
change?

Antes de commitiear podria ejecutar git diff --staged 
De esa manera me muestra que cambios voy a introducir al proximo commit.
De ahi me tendria que dar cuenta si corresponde o no a un unico cambio logico.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Cuando quiero experimentar con un cambio y ver como funciona
sin alterar el codigo principal.


How do the diagrams help you visualize the branch structure?

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Porque en el repositorio remoto trabaja mas gente y una sincronizacion automatica puede generar problemas con mi version actual.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks se usa solamente para crear una copia de un repositorio de Github.com en mi cuenta de Github.
Branches me permite crear una nueva rama (branch) de un proyecto de manera local para explorar una nueva caracteristica o 
evaluar nuevas librerias, soluciones a un problema, etc.
Clonar me permite obtener una copia local de un repositorio que se encuentra en otro lugar hosteado (como por ej github.com).
 
 What is the benefit of having a copy of the last known state of the remote stored locally?

 Uno puede comparar antes de hacer un push lo que se estuvo trabajando remotamente para poder determinar 
 si vale la pena sumar mis cambios o no. Quizas tambien puede haber mejoras que fueron solucionadas de una 
 manera mas elegante que mis soluciones.

 How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

 Usando otros sistemas de control de versiones como ser SVN. Aunque no conozco en detalle SVN, el mayor problema 
 siempre se genera al momento de hacer los merges.
 